// Generated by dts-bundle-generator v9.5.1

export interface App {
	id: string;
	name: string;
	type: "desktop" | "uwp" | "url";
	icon: {
		path: string;
		getBase64: () => Promise<string>;
	};
	launch: () => void;
}
export interface AppRegistry {
	fetchApps(): Promise<App[]>;
}
export interface Process {
	id: number;
	name: string;
	status: "running" | "stopped" | "paused";
	startTime: Date;
	endTime?: Date;
}
export interface ProcessManager {
	stopProcess(id: number): boolean;
	getProcess(id: number): Process | null;
	listProcesses(): Process[];
}
export interface Setting {
	id: string;
	name: string;
	open: () => void;
}
export interface SettingRegistry {
	getSettings(): Setting[];
}
declare const Process$1: ProcessManager;
declare const Apps: AppRegistry;
declare const Settings: SettingRegistry;

declare namespace Windows {
	export { Apps, Process$1 as Process, Settings };
}

export {
	Windows,
};

export {};
